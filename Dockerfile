# Use the official Node.js 16 image as the base image
FROM node:16

# Set the working directory in the Docker container
WORKDIR /app

# Copy the package.json and package-lock.json files to the container
COPY package*.json ./

# Install the application dependencies in the container
RUN npm install

# Install Babel preset and plugin
RUN npm install --save-dev @babel/preset-env @babel/plugin-proposal-optional-chaining

# Copy the rest of the application files to the container
COPY . .

# Build the application
RUN npm run build

# Use the official lightweight Node.js runtime image as the base image for the final stage
FROM node:16-alpine

# Set the working directory in the Docker container
WORKDIR /app

# Install the serve package globally in the container, 
# this package allows to serve static files like the ones generated by the build command
RUN npm install -g serve

# Copy the build output from the first stage
COPY --from=0 /app/dist .

# Expose the serve port
EXPOSE 5000

# Serve the application
CMD ["serve", "-s", ".", "-l", "5000"]
